-- used create_external_table.sql to create an external table of the input
drop table day04_data;
create table day04_data (lineno number, xline varchar2(4000));
insert into day04_data select * from day04_input_ext;

-- let's smoosh that up into one line per passport
drop table day04_part1_passport_lines;
create table day04_part1_passport_lines (lineno number,full_passport varchar2(4000));

create or replace procedure day04_part1_create_passport_lines as
  l_full_line varchar2(4000);
  l_lineno number := 1;
begin
  for i in (select xline from day04_example order by lineno) loop
    if i.xline is null then
      insert into day04_part1_passport_lines values (l_lineno,l_full_line);
      l_full_line:= null;
	  l_lineno:= l_lineno +1;
    else
      l_full_line:=l_full_line||' '||i.xline;
    end if;
  end loop;
  if l_full_line is not null then
    insert into day04_part1_passport_lines values (l_lineno,l_full_line);
  end if;  
end;
/

exec day04_part1_create_passport_lines;
commit;

-- External table source file has Windows cf/lf
-- used dos2unix on the input.txt file

-- translate example solution to use day04 data
select count(*) valid_passports from (
select gno, count(*) from (
with t (gno, pp_elements, full_passport, levels) as (
            select lineno gno, regexp_substr(full_passport,'[^ ]+',1,1)           , full_passport    , 1        from day04_part1_passport_lines
  union all select gno    , regexp_substr(full_passport,'[^ ]+',1,levels+1), full_passport, levels+1 from t
              where regexp_substr(full_passport,'[^ ]+',1,levels+1) is not null
  )
select gno, pp_elements, e.optional
from t, day04_password_elements e
where substr(t.pp_elements,1,3) = e.element
  and e.optional = 'N'
)
group by gno
having count(*)=7
order by gno
);
-- worked!
-- 230
