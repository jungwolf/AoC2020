/*
1-3 a: abcde
1-3 b: cdefg
2-9 c: ccccccccc
Each line gives the password policy and then the password.
  The password policy indicates the lowest and highest number of times a given letter must appear for the password to be valid.
  For example, 1-3 a means that the password must contain a at least 1 time and at most 3 times.

In the above example, 2 passwords are valid.
  The middle password, cdefg, is not; it contains no instances of b, but needs at least 1.
  The first and third passwords are valid: they contain one a or nine c, both within the limits of their respective policies.

How many passwords are valid according to their policies?
*/

-- load up test data
drop table day02_example;
create table day02_example (lineno number, xline varchar2(4000));
insert into day02_example values(1,'1-3 a: abcde');
insert into day02_example values(2,'1-3 b: cdefg');
insert into day02_example values(3,'2-9 c: ccccccccc');
select * from day02_test;
commit;


-- parse the data
select xline from day02_test;
-- low, high, what, pw
-- let's brute force it with instr and substr
select xline
  , instr(xline,'-')
  , instr(xline,' ')
  , instr(xline,':')
  , instr(xline,' ',1,2)
from day02_test;
/*
1234567890123456
1-3 a: abcde     
1-3 b: cdefg
2-9 c: ccccccccc
*/

select xline, a, b, c, d
  , substr(xline,1,a-1) low
  , substr(xline,a+1,b-a-1) high
  , substr(xline,b+1,c-b-1) what
  , substr(xline,d+1) pw
from (
select xline
  , instr(xline,'-') a
  , instr(xline,' ') b
  , instr(xline,':') c
  , instr(xline,' ',1,2) d
from day02_test
);


