-- overview
-- split input into x,y,seated -> no seat = null, empty = 0, full = 1
-- probably need to use x*length+y
-- precompute who can see what 
-- recurse!

-- small dataset
select * from day11_s_data;
/*
1	L##
2	L##
3	L.L
*/

create or replace view day11_xy as
with t (id, y, x, seat, leftover, row_length) as (
  select
    lineno id
    , lineno y
    , 1 x
    , decode( substr(xline,1,1), 'L',0,'#',1,'.',null) seat
    , substr(xline,2) leftover
    ,length(xline) row_length
  from day11_s_data
  union all
  select 
    x*row_length + y id
    , y y
    , x+1 x
    , decode( substr(leftover,1,1), 'L',0,'#',1,'.',null) seat
    , substr(leftover,2) leftover
    , row_length row_length
  from t
  where x < row_length
)
select id,x,y,seat,row_length from t
;




create or replace function find_first_seat_location(currentid number, stepx number, stepy number, row_length number) return number as
  id_jump number;
  i number;
  currentx number;
  currenty number;
  nextx number;
  nexty number;
begin
  select x,y into currentx,currenty from day11_xy where id=currentid;
  i:=1;
  nextx := currentx+stepx*i;
  nexty := currenty+stepy*i;
  
  -- y past end of table is okay, returns null anyway
  if nexty < 1 then
    return null;
  end if;
  if nextx < 1 or nextx > row_length then
    return null;
  end if;

  id_jump:=stepy*i+(stepx)*row_length*i;
  return currentid+id_jump;
end;
/

--create or replace function find_first_seat_location(currentid number, stepx number, stepy number, row_length number) return number as
select id, y, x, seat, row_length, y+(x-1)*row_length, find_first_seat_location(id,+1,0,row_length) "where"
  , 1
from day11_xy;
/* x across, y down
0 1 2 3
1 1 4 7
2 2 5 8
3 3 6 9
*/





create or replace function find_first_seat_location(currentid number, stepx number, stepy number, row_length number) return number as
  id_jump number;
  i number;
  currentx number;
  currenty number;
  nextx number;
  nexty number;
  nextseat number
begin
  select x,y into currentx,currenty from day11_xy where id=currentid;
  i:=1;
  nextx := currentx+stepx*i;
  nexty := currenty+stepy*i;
  
  -- y past end of table is okay, returns null anyway
  if nexty < 1 then
    return null;
  end if;
  if nextx < 1 or nextx > row_length then
    return null;
  end if;

  return currentid+id_jump;
end;
/

--create or replace function find_first_seat_location(currentid number, stepx number, stepy number, row_length number) return number as
select id, y, x, seat, row_length, y+(x-1)*row_length, find_first_seat_location(id,+1,0,row_length) "where"
  , 1
from day11_xy;
/* x across, y down
0 1 2 3
1 1 4 7
2 2 5 8
3 3 6 9
*/






----
create or replace function find_first_seat_location(currentid number, stepx number, stepy number, row_length number) return number as
  id_jump number;
  i number;
  currentx number;
  currenty number;
  nextx number;
  nexty number;
  nextseat number
begin
  select x,y into currentx,currenty from day11_xy where id=currentid;
  i:=1;
  nextx := currentx+stepx*i;
  nexty := currenty+stepy*i;
  
  -- y past end of table is okay, returns null anyway
  if nexty < 1 then
    return null;
  end if;
  if nextx < 1 or nextx > row_length then
    return null;
  end if;

  id_jump:=stepy*i+(stepx)*row_length*i;
  select seat into nextseat from from day11_xy where id=currentid+id_jump;
  if nextseat in ('.') then
    null
  end if;
  return nextseat;
end;
/

-- check out example2_precompute_lookup.txt
--create or replace function find_next_board_id(currentid number, stepx number, stepy number) return number as
/*
select id, x, y, seat, row_length, y+(x-1)*row_length id1,trunc((id-1)/row_length)+1 x1, mod(id-1,row_length)+1 y1
  ,find_next_board_id(id,-1,-1) "x-y-"
  ,find_next_board_id(id,-1, 0) "x-y0"
  ,find_next_board_id(id,-1,+1) "x-y+"
  ,find_next_board_id(id, 0,-1) "x0y-"
  ,find_next_board_id(id, 0, 0) "x0y0"
  ,find_next_board_id(id, 0,+1) "x0y+"
  ,find_next_board_id(id,+1,-1) "x1y-"
  ,find_next_board_id(id,+1, 0) "x1y0"
  ,find_next_board_id(id,+1,+1) "x1y1"
from day11_xy;
*/
/* x across, y down
0 1 2 3
1 1 4 7
2 2 5 8
3 3 6 9
*/
--create or replace function find_first_seat_location(currentid number, stepx number, stepy number) return number as
/*
select id, x, y, seat, row_length, y+(x-1)*row_length id1,trunc((id-1)/row_length)+1 x1, mod(id-1,row_length)+1 y1
  ,find_next_board_id(id,-1,-1) "x-y-"
  ,find_next_board_id(id,-1, 0) "x-y0"
  ,find_next_board_id(id,-1,+1) "x-y+"
  ,find_next_board_id(id, 0,-1) "x0y-"
  ,find_next_board_id(id, 0, 0) "x0y0"
  ,find_next_board_id(id, 0,+1) "x0y+"
  ,find_next_board_id(id,+1,-1) "x1y-"
  ,find_next_board_id(id,+1, 0) "x1y0"
  ,find_next_board_id(id,+1,+1) "x1y1"
  ,find_first_seat_location(id,-1,0) "nextseatx-y0"
  ,find_first_seat_location(id,+1,0) "nextseatx+y0"
from day11_xy;
*/
/* x across, y down
0 1 2 3
1 1 4 7
2 2 5 8
3 3 6 9
*/
/* x across, y down, seat value
0 1 2 3
1 0 1 1
2 0 1 1
3 0 n 0
*/
/* x across, y down, seat value
0 1 2 3
1 L # #
2 L # #
3 L . L
*/
-- finish lookup table