-- I originally didn't work through the example to validate my approach
-- part 1 worked fine (solution1.txt)
-- part 2 didn't, and I didn't have a good way to debug it (solution2.txt)
-- I worked through the example including debug steps (solution_example.txt)
-- now, I will work through part 2 using the example data (solution2_example.txt)

drop table day03_data;
create table day03_data (lineno number, xline varchar2(4000));

echo "LOAD DATA truncate into table day03_data (lineno recnum,xline terminated by '^')" > day03.ctl
sqlldr jungwolf/password@aoc2 data=input.txt control=day03.ctl

select * from day03_data order by lineno;


--lag test
create table lag_test (a number);
insert into lag_test values (1);
insert into lag_test values (2);
insert into lag_test values (9);
insert into lag_test values (15);
commit;
select * from lag_test;
select a, lag(a,1) over (order by rownum) from lag_test;

select a
  , lag(a,1) over (order by rownum)
  , a * nvl(lag(a,1) over (order by rownum),1)
from lag_test;
-- doesn't work

-- use sum by using logs
select
    sum(a)
  , sum(ln(a))
  , sum(exp(ln(a)))
  , exp(sum(ln(a)))
from lag_test;
-- works
-- note, casting to binary_double is much faster if using a large dataset
SELECT exp(sum(ln(cast(a as binary_double)))) FROM lag_test;


