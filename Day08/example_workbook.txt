create table day08_example (lineno number, xline varchar2(4000));

insert into day08_example
select 
            1,'nop +0' from dual
  union all 2,'acc +1' from dual
  union all 3,'jmp +4' from dual
  union all 4,'acc +3' from dual
  union all 5,'jmp -3' from dual
  union all 6,'acc -99' from dual
  union all 7,'acc +1' from dual
  union all 8,'jmp -4' from dual
  union all 9,'acc +6' from dual
/
select * from day08_example;
commit;
select lineno, substr(xline,1,3) op, substr(xline,5) arg from day08_example;
-- pc program counter
-- reg1 register 1

with t (lineno, op, arg, pc, reg1, source) as (
  select lineno, substr(xline,1,3) op, substr(xline,5) arg, 1 pc, 0 reg1, 'Y' source from day08_example
)
select * from t;

-- error because of cycle
with t (lineno, op, arg, pc, reg1, source) as (
  select lineno, substr(xline,1,3) op, substr(xline,5) arg, 1 pc, 0 reg1, 'Y' source from day08_example
  union all
  select lineno, op, arg, pc, reg1, source from t
  where pc = lineno
)
select * from t;

-- not working as I expected
with t (lineno, op, arg, pc, reg1, source) as (
  select lineno, substr(xline,1,3) op, to_number(substr(xline,5)) arg, 1 pc, 0 reg1, 'Y' source from day08_example
  union all
  select lineno, op, arg, decode(op,'jmp',pc+arg,pc+1), reg1, decode(pc-lineno,0,'N','Y') source from t
)
cycle pc set is_cycle to 'Y' default 'N'
select * from t;

-- so where is the next pc?
select lineno, op, arg, decode(op,'jmp',lineno+arg,lineno+1) pc from (
select lineno, substr(xline,1,3) op, to_number(substr(xline,5)) arg from day08_example
)
;

-- pc isn't right name, nextline is better
select lineno, op, arg, decode(op,'jmp',lineno+arg,lineno+1) nextline from (
  select lineno, substr(xline,1,3) op, to_number(substr(xline,5)) arg from day08_example
)
;
/*
1	nop	0	2
2	acc	1	3
3	jmp	4	7
4	acc	3	5
5	jmp	-3	2
6	acc	-99	7
7	acc	1	8
8	jmp	-4	4
9	acc	6	10

l#  op  arg nextpc reg1
1   nop 0	2       0
2	acc	1	3       1
3	jmp	4	7       1
7	acc	1	8       2
8	jmp	-4	4       2
4	acc	3	5       5
5	jmp	-3	2 <- cycle!

6	acc	-99	7
9	acc	6	10

*/

select level, lineno, op, arg, nextline, reg1 from (
  select lineno, op, arg, decode(op,'jmp',lineno+arg,lineno+1) nextline, 0 reg1 from (
    select lineno, substr(xline,1,3) op, to_number(substr(xline,5)) arg from day08_example
  )
)
connect by nocycle prior nextline=lineno start with lineno = 1
order by level
;

-- try something with this: sum(sal+nvl(comm,0)) over (partition by deptno order by empno) rt
select level, lineno, op, arg, nextline, sum(decode(op,'acc',arg,0)) over (order by level) reg1 from (
  select lineno, op, arg, decode(op,'jmp',lineno+arg,lineno+1) nextline from (
    select lineno, substr(xline,1,3) op, to_number(substr(xline,5)) arg from day08_example
  )
)
connect by nocycle prior nextline=lineno start with lineno = 1
order by level
;
-- worked! last line is the "register"
1	1	nop	0	2	0
2	2	acc	1	3	1
3	3	jmp	4	7	1
4	7	acc	1	8	2
5	8	jmp	-4	4	2
6	4	acc	3	5	5
